// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 6d1ac80c6e7bce05 "Projeto Chacal", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Default' | 'Loading' | 'Disabled' | 'Success' | 'Error' // Variant
}} Props

 */
import { className, css, fonts } from "./chunks/chunk-XO7AUMAJ.js";
import { routes } from "./chunks/chunk-XLH7UDAO.js";

// virtual:form-button
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/3sYMgnprFM0KdZi7mQKp/xyyzPgjHCzE2DdgpvEAk/aTFV44vGO.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	getFontsFromSharedStyle,
	RichText,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
	withFX,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var MotionDivWithFX = withFX(motion.div);
var enabledGestures = {
	PRLwz_TGL: {
		hover: true,
		pressed: true,
	},
};
var cycleOrder = [
	"PRLwz_TGL",
	"UCSqfO7Zg",
	"z9IFFqk8J",
	"lmFatjL_M",
	"kMhb2iwei",
];
var serializationHash = "framer-YOBIr";
var variantClassNames = {
	kMhb2iwei: "framer-v-1qadnu3",
	lmFatjL_M: "framer-v-8upbq6",
	PRLwz_TGL: "framer-v-1bj34cg",
	UCSqfO7Zg: "framer-v-4q00tj",
	z9IFFqk8J: "framer-v-1d0dqlb",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	delay: 0,
	duration: 0.2,
	ease: [0.44, 0, 0.56, 1],
	type: "tween",
};
var transition2 = {
	delay: 0,
	duration: 1,
	ease: [0, 0, 1, 1],
	type: "tween",
};
var animation = {
	opacity: 1,
	rotate: 360,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	x: 0,
	y: 0,
};
var transformTemplate1 = (_, t) => `translateX(-50%) ${t}`;
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Default: "PRLwz_TGL",
	Disabled: "z9IFFqk8J",
	Error: "kMhb2iwei",
	Loading: "UCSqfO7Zg",
	Success: "lmFatjL_M",
};
var getProps = ({ height, id, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "PRLwz_TGL",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const {
		style,
		className: className2,
		layoutId,
		variant,
		...restProps
	} = getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "PRLwz_TGL",
		enabledGestures,
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [className];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const ref1 = React.useRef(null);
	const isDisplayed = () => {
		if (baseVariant === "UCSqfO7Zg") return false;
		return true;
	};
	const isDisplayed1 = () => {
		if (baseVariant === "UCSqfO7Zg") return true;
		return false;
	};
	const defaultLayoutId = React.useId();
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.button
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1bj34cg",
							className2,
							classNames,
						)}
						data-framer-name={"Default"}
						data-reset={"button"}
						layoutDependency={layoutDependency}
						layoutId={"PRLwz_TGL"}
						ref={ref ?? ref1}
						style={{
							backgroundColor:
								"var(--token-183b5922-d0ea-48d1-af7c-77d51908fd54, rgb(226, 225, 223))",
							borderBottomLeftRadius: 10,
							borderBottomRightRadius: 10,
							borderTopLeftRadius: 10,
							borderTopRightRadius: 10,
							opacity: 1,
							...style,
						}}
						variants={{
							"PRLwz_TGL-hover": {
								backgroundColor:
									"var(--token-a94f824d-9740-42c5-b0f6-0397fd7c5912, rgb(158, 158, 158))",
								opacity: 1,
							},
							"PRLwz_TGL-pressed": {
								backgroundColor:
									"var(--token-dbae631d-d751-404b-ae6d-1639e29be314, rgb(84, 84, 84))",
								opacity: 1,
							},
							kMhb2iwei: {
								backgroundColor:
									"var(--token-afddf2fe-7319-4f1f-8983-04ae72224770, rgba(255, 34, 68, 0.15))",
								opacity: 1,
							},
							lmFatjL_M: {
								opacity: 1,
							},
							z9IFFqk8J: {
								opacity: 0.5,
							},
						}}
						{...addPropertyOverrides(
							{
								"PRLwz_TGL-hover": {
									"data-framer-name": void 0,
								},
								"PRLwz_TGL-pressed": {
									"data-framer-name": void 0,
								},
								kMhb2iwei: {
									"data-framer-name": "Error",
								},
								lmFatjL_M: {
									"data-framer-name": "Success",
								},
								UCSqfO7Zg: {
									"data-framer-name": "Loading",
								},
								z9IFFqk8J: {
									"data-framer-name": "Disabled",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						{isDisplayed() && (
							<RichText
								__fromCanvasComponent={true}
								className={"framer-d7pie5"}
								fonts={["Inter"]}
								layoutDependency={layoutDependency}
								layoutId={"I1__WZiVj"}
								style={{
									"--extracted-r6o4lv":
										"var(--token-7ab5faa8-d17b-41d2-8b42-49368cf2f4df, rgb(34, 39, 37))",
									"--framer-link-text-color": "rgb(0, 153, 255)",
									"--framer-link-text-decoration": "underline",
								}}
								variants={{
									"PRLwz_TGL-pressed": {
										"--extracted-r6o4lv":
											"var(--token-183b5922-d0ea-48d1-af7c-77d51908fd54, rgb(226, 225, 223))",
									},
									kMhb2iwei: {
										"--extracted-r6o4lv": "rgb(255, 34, 68)",
									},
								}}
								verticalAlignment={"top"}
								withExternalLayout={true}
								{...addPropertyOverrides(
									{
										"PRLwz_TGL-pressed": {
											children: (
												<React.Fragment>
													<motion.p
														className={"framer-styles-preset-q12std"}
														data-styles-preset={"nZjNjGRCH"}
														style={{
															"--framer-text-color":
																"var(--extracted-r6o4lv, var(--token-183b5922-d0ea-48d1-af7c-77d51908fd54, rgb(226, 225, 223)))",
														}}
													>
														{"Submit"}
													</motion.p>
												</React.Fragment>
											),
										},
										kMhb2iwei: {
											children: (
												<React.Fragment>
													<motion.p
														style={{
															"--font-selector": "SW50ZXItU2VtaUJvbGQ=",
															"--framer-font-family":
																'"Inter", "Inter Placeholder", sans-serif',
															"--framer-font-size": "14px",
															"--framer-font-weight": "600",
															"--framer-text-color":
																"var(--extracted-r6o4lv, rgb(255, 34, 68))",
														}}
													>
														{"Something went wrong"}
													</motion.p>
												</React.Fragment>
											),
											fonts: ["Inter-SemiBold"],
										},
										lmFatjL_M: {
											children: (
												<React.Fragment>
													<motion.p
														className={"framer-styles-preset-q12std"}
														data-styles-preset={"nZjNjGRCH"}
													>
														{"Thank you"}
													</motion.p>
												</React.Fragment>
											),
										},
									},
									baseVariant,
									gestureVariant,
								)}
							>
								<React.Fragment>
									<motion.p
										className={"framer-styles-preset-q12std"}
										data-styles-preset={"nZjNjGRCH"}
										style={{
											"--framer-text-color":
												"var(--extracted-r6o4lv, var(--token-7ab5faa8-d17b-41d2-8b42-49368cf2f4df, rgb(34, 39, 37)))",
										}}
									>
										{"Submit"}
									</motion.p>
								</React.Fragment>
							</RichText>
						)}
						{isDisplayed1() && (
							<motion.div
								className={"framer-159iyta"}
								data-framer-name={"Spinner"}
								layoutDependency={layoutDependency}
								layoutId={"lrnyHhnzg"}
								style={{
									mask: "url('https://framerusercontent.com/images/pGiXYozQ3mE4cilNOItfe2L2fUA.svg') alpha no-repeat center / cover add",
									WebkitMask:
										"url('https://framerusercontent.com/images/pGiXYozQ3mE4cilNOItfe2L2fUA.svg') alpha no-repeat center / cover add",
								}}
							>
								<MotionDivWithFX
									__framer__loop={animation}
									__framer__loopEffectEnabled={true}
									__framer__loopRepeatDelay={0}
									__framer__loopRepeatType={"loop"}
									__framer__loopTransition={transition2}
									__perspectiveFX={false}
									__smartComponentFX={true}
									__targetOpacity={1}
									className={"framer-5reo9c"}
									data-framer-name={"Conic"}
									layoutDependency={layoutDependency}
									layoutId={"BzdPhTBQg"}
									style={{
										background:
											"conic-gradient(from 0deg at 50% 50%, rgba(0, 0, 0, 0) 7.208614864864882deg, rgb(0, 0, 0) 342deg)",
										mask: "none",
										WebkitMask: "none",
									}}
									variants={{
										UCSqfO7Zg: {
											mask: "url('https://framerusercontent.com/images/pGiXYozQ3mE4cilNOItfe2L2fUA.svg') alpha no-repeat center / cover add",
											WebkitMask:
												"url('https://framerusercontent.com/images/pGiXYozQ3mE4cilNOItfe2L2fUA.svg') alpha no-repeat center / cover add",
										},
									}}
								>
									<motion.div
										className={"framer-oq3ggq"}
										data-framer-name={"Rounding"}
										layoutDependency={layoutDependency}
										layoutId={"DPVVZgHh1"}
										style={{
											backgroundColor: "rgb(255, 255, 255)",
											borderBottomLeftRadius: 1,
											borderBottomRightRadius: 1,
											borderTopLeftRadius: 1,
											borderTopRightRadius: 1,
										}}
										transformTemplate={transformTemplate1}
									/>
								</MotionDivWithFX>
							</motion.div>
						)}
					</motion.button>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css2 = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-YOBIr.framer-1hf2a4, .framer-YOBIr .framer-1hf2a4 { display: block; }",
	".framer-YOBIr.framer-1bj34cg { align-content: center; align-items: center; cursor: pointer; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: 40px; justify-content: center; overflow: visible; padding: 0px; position: relative; width: 240px; }",
	".framer-YOBIr .framer-d7pie5 { -webkit-user-select: none; flex: none; height: auto; position: relative; user-select: none; white-space: pre; width: auto; }",
	".framer-YOBIr .framer-159iyta { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 20px); overflow: hidden; position: relative; width: 20px; }",
	".framer-YOBIr .framer-5reo9c { bottom: 0px; flex: none; left: 0px; overflow: visible; position: absolute; right: 0px; top: 0px; }",
	".framer-YOBIr .framer-oq3ggq { aspect-ratio: 1 / 1; flex: none; height: var(--framer-aspect-ratio-supported, 2px); left: 50%; overflow: visible; position: absolute; top: 0px; width: 2px; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-YOBIr.framer-1bj34cg { gap: 0px; } .framer-YOBIr.framer-1bj34cg > * { margin: 0px; margin-left: calc(0px / 2); margin-right: calc(0px / 2); } .framer-YOBIr.framer-1bj34cg > :first-child { margin-left: 0px; } .framer-YOBIr.framer-1bj34cg > :last-child { margin-right: 0px; } }",
	".framer-YOBIr.framer-v-4q00tj.framer-1bj34cg, .framer-YOBIr.framer-v-1d0dqlb.framer-1bj34cg, .framer-YOBIr.framer-v-8upbq6.framer-1bj34cg, .framer-YOBIr.framer-v-1qadnu3.framer-1bj34cg { cursor: unset; }",
	".framer-YOBIr.framer-v-4q00tj .framer-5reo9c { overflow: hidden; }",
	...css,
];
var FrameraTFV44vGO = withCSS(Component, css2, "framer-YOBIr");
var stdin_default = FrameraTFV44vGO;
FrameraTFV44vGO.displayName = "Form Button";
FrameraTFV44vGO.defaultProps = {
	height: 40,
	width: 240,
};
addPropertyControls(FrameraTFV44vGO, {
	variant: {
		options: ["PRLwz_TGL", "UCSqfO7Zg", "z9IFFqk8J", "lmFatjL_M", "kMhb2iwei"],
		optionTitles: ["Default", "Loading", "Disabled", "Success", "Error"],
		title: "Variant",
		type: ControlType.Enum,
	},
});
addFonts(
	FrameraTFV44vGO,
	[
		{
			explicitInter: true,
			fonts: [
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/5vvr9Vy74if2I6bQbJvbw7SY1pQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/EOr0mi4hNtlgWNn9if640EZzXCo.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/Y9k9QrlZAqio88Klkmbd8VoMQc.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/OYrD2tBIBPvoJXiIHnLoOXnY9M.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/JeYwfuaPfZHQhEG8U5gtPDZ7WQ.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/vQyevYAyHtARFwPqUzQGpnDs.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/b6Y37FthZeALduNqHicBT6FutY.woff2",
					weight: "400",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0460-052F, U+1C80-1C88, U+20B4, U+2DE0-2DFF, U+A640-A69F, U+FE2E-FE2F",
					url: "https://framerusercontent.com/assets/hyOgCu0Xnghbimh0pE8QTvtt2AU.woff2",
					weight: "600",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0301, U+0400-045F, U+0490-0491, U+04B0-04B1, U+2116",
					url: "https://framerusercontent.com/assets/NeGmSOXrPBfEFIy5YZeHq17LEDA.woff2",
					weight: "600",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+1F00-1FFF",
					url: "https://framerusercontent.com/assets/oYaAX5himiTPYuN8vLWnqBbfD2s.woff2",
					weight: "600",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange: "U+0370-03FF",
					url: "https://framerusercontent.com/assets/lEJLP4R0yuCaMCjSXYHtJw72M.woff2",
					weight: "600",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0100-024F, U+0259, U+1E00-1EFF, U+2020, U+20A0-20AB, U+20AD-20CF, U+2113, U+2C60-2C7F, U+A720-A7FF",
					url: "https://framerusercontent.com/assets/cRJyLNuTJR5jbyKzGi33wU9cqIQ.woff2",
					weight: "600",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0000-00FF, U+0131, U+0152-0153, U+02BB-02BC, U+02C6, U+02DA, U+02DC, U+2000-206F, U+2074, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD",
					url: "https://framerusercontent.com/assets/1ZFS7N918ojhhd0nQWdj3jz4w.woff2",
					weight: "600",
				},
				{
					family: "Inter",
					source: "framer",
					style: "normal",
					unicodeRange:
						"U+0102-0103, U+0110-0111, U+0128-0129, U+0168-0169, U+01A0-01A1, U+01AF-01B0, U+1EA0-1EF9, U+20AB",
					url: "https://framerusercontent.com/assets/A0Wcc7NgXMjUuFdquHDrIZpzZw0.woff2",
					weight: "600",
				},
			],
		},
		...getFontsFromSharedStyle(fonts),
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:form-button
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "PRLwz_TGL",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders FormButtonFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var form_button_default = ComponentWithRoot;
export { form_button_default as default };
