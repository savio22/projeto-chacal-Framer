// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 6d1ac80c6e7bce05 "Projeto Chacal", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Default' | 'Mobile' // Variant
 * border?: undefined // Border
}} Props

 */
import { routes } from "./chunks/chunk-XLH7UDAO.js";

// virtual:border-bg
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/7IcbfkZOCUrwmHuw4OE2/FpHXRQ1dHK2JfZTFSaZl/onKjgUkt_.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
	withFX,
	withOptimizedAppearEffect,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var MotionDivWithFXWithOptimizedAppearEffect = withOptimizedAppearEffect(
	withFX(motion.div),
);
var cycleOrder = ["amZR9chTS", "W7wbcNK1m"];
var serializationHash = "framer-FRrDk";
var variantClassNames = {
	amZR9chTS: "framer-v-1mu5ag",
	W7wbcNK1m: "framer-v-un1v7j",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	delay: 0,
	duration: 2.5,
	ease: [0.8, 0.2, 0, 1],
	type: "tween",
};
var animation = {
	opacity: 1,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	transition: transition1,
	x: 0,
	y: 0,
};
var animation1 = {
	opacity: 1,
	rotate: 0,
	rotateX: 0,
	rotateY: 0,
	scale: 1,
	skewX: 0,
	skewY: 0,
	x: 0,
	y: -800,
};
var transition2 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Default: "amZR9chTS",
	Mobile: "W7wbcNK1m",
};
var getProps = ({ border, height, id, width, ...props }) => {
	return {
		...props,
		SFEXJw1PY: border ??
			props.SFEXJw1PY ?? {
				borderBottomWidth: 0,
				borderColor:
					'var(--token-7ab5faa8-d17b-41d2-8b42-49368cf2f4df, rgb(34, 39, 37)) /* {"name":"Gray"} */',
				borderLeftWidth: 1,
				borderRightWidth: 1,
				borderStyle: "solid",
				borderTopWidth: 0,
			},
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "amZR9chTS",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const { style, className, layoutId, variant, SFEXJw1PY, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "amZR9chTS",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition2}>
					<MotionDivWithFXWithOptimizedAppearEffect
						{...restProps}
						{...gestureHandlers}
						__framer__presenceAnimate={animation}
						__framer__presenceInitial={animation1}
						__perspectiveFX={false}
						__smartComponentFX={true}
						__targetOpacity={1}
						className={cx(
							scopingClassNames,
							"framer-1mu5ag",
							className,
							classNames,
						)}
						data-framer-appear-id={"1mu5ag"}
						data-framer-name={"Default"}
						layoutDependency={layoutDependency}
						layoutId={"amZR9chTS"}
						optimized={true}
						ref={ref ?? ref1}
						style={{
							mask: "linear-gradient(180deg, rgb(0, 0, 0) 39.189189189189186%, rgba(0, 0, 0, 0) 100%) add",
							WebkitMask:
								"linear-gradient(180deg, rgb(0, 0, 0) 39.189189189189186%, rgba(0, 0, 0, 0) 100%) add",
							...style,
						}}
						{...addPropertyOverrides(
							{
								W7wbcNK1m: {
									"data-framer-name": "Mobile",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<motion.div
							className={"framer-iy291a"}
							data-border={true}
							layoutDependency={layoutDependency}
							layoutId={"W7ELvlIgQ"}
							style={{
								"--border-bottom-width":
									(SFEXJw1PY.borderBottomWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-color": SFEXJw1PY.borderColor,
								"--border-left-width":
									(SFEXJw1PY.borderLeftWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-right-width":
									(SFEXJw1PY.borderRightWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-style": SFEXJw1PY.borderStyle,
								"--border-top-width":
									(SFEXJw1PY.borderTopWidth ?? SFEXJw1PY.borderWidth) + "px",
							}}
						/>
						<motion.div
							className={"framer-15uthdd"}
							data-border={true}
							layoutDependency={layoutDependency}
							layoutId={"E3jsqjTHL"}
							style={{
								"--border-bottom-width":
									(SFEXJw1PY.borderBottomWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-color": SFEXJw1PY.borderColor,
								"--border-left-width":
									(SFEXJw1PY.borderLeftWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-right-width":
									(SFEXJw1PY.borderRightWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-style": SFEXJw1PY.borderStyle,
								"--border-top-width":
									(SFEXJw1PY.borderTopWidth ?? SFEXJw1PY.borderWidth) + "px",
							}}
						/>
						<motion.div
							className={"framer-pbt49m"}
							data-border={true}
							layoutDependency={layoutDependency}
							layoutId={"zFgJNk3h_"}
							style={{
								"--border-bottom-width":
									(SFEXJw1PY.borderBottomWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-color": SFEXJw1PY.borderColor,
								"--border-left-width":
									(SFEXJw1PY.borderLeftWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-right-width":
									(SFEXJw1PY.borderRightWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-style": SFEXJw1PY.borderStyle,
								"--border-top-width":
									(SFEXJw1PY.borderTopWidth ?? SFEXJw1PY.borderWidth) + "px",
							}}
						/>
						<motion.div
							className={"framer-iswpsz"}
							data-border={true}
							layoutDependency={layoutDependency}
							layoutId={"B9Yt3r34J"}
							style={{
								"--border-bottom-width":
									(SFEXJw1PY.borderBottomWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-color": SFEXJw1PY.borderColor,
								"--border-left-width":
									(SFEXJw1PY.borderLeftWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-right-width":
									(SFEXJw1PY.borderRightWidth ?? SFEXJw1PY.borderWidth) + "px",
								"--border-style": SFEXJw1PY.borderStyle,
								"--border-top-width":
									(SFEXJw1PY.borderTopWidth ?? SFEXJw1PY.borderWidth) + "px",
							}}
						/>
					</MotionDivWithFXWithOptimizedAppearEffect>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-FRrDk.framer-1hjbu34, .framer-FRrDk .framer-1hjbu34 { display: block; }",
	".framer-FRrDk.framer-1mu5ag { display: grid; gap: 14px; grid-auto-rows: minmax(0, 1fr); grid-template-columns: repeat(4, minmax(50px, 1fr)); grid-template-rows: repeat(1, minmax(0, 1fr)); height: 800px; justify-content: center; overflow: hidden; padding: 0px 28px 0px 28px; position: relative; width: 1200px; }",
	".framer-FRrDk .framer-iy291a, .framer-FRrDk .framer-15uthdd, .framer-FRrDk .framer-pbt49m, .framer-FRrDk .framer-iswpsz { align-self: start; flex: none; height: 100%; justify-self: start; overflow: hidden; position: relative; width: 100%; }",
	".framer-FRrDk.framer-v-un1v7j.framer-1mu5ag { padding: 0px 14px 0px 14px; width: 390px; }",
	'.framer-FRrDk[data-border="true"]::after, .framer-FRrDk [data-border="true"]::after { content: ""; border-width: var(--border-top-width, 0) var(--border-right-width, 0) var(--border-bottom-width, 0) var(--border-left-width, 0); border-color: var(--border-color, none); border-style: var(--border-style, none); width: 100%; height: 100%; position: absolute; box-sizing: border-box; left: 0; top: 0; border-radius: inherit; pointer-events: none; }',
];
var FrameronKjgUkt_ = withCSS(Component, css, "framer-FRrDk");
var stdin_default = FrameronKjgUkt_;
FrameronKjgUkt_.displayName = "Border BG";
FrameronKjgUkt_.defaultProps = {
	height: 800,
	width: 1200,
};
addPropertyControls(FrameronKjgUkt_, {
	variant: {
		options: ["amZR9chTS", "W7wbcNK1m"],
		optionTitles: ["Default", "Mobile"],
		title: "Variant",
		type: ControlType.Enum,
	},
	SFEXJw1PY: {
		defaultValue: {
			borderBottomWidth: 0,
			borderColor:
				'var(--token-7ab5faa8-d17b-41d2-8b42-49368cf2f4df, rgb(34, 39, 37)) /* {"name":"Gray"} */',
			borderLeftWidth: 1,
			borderRightWidth: 1,
			borderStyle: "solid",
			borderTopWidth: 0,
		},
		title: "Border",
		type: ControlType.Border,
	},
});
addFonts(
	FrameronKjgUkt_,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:border-bg
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "W7wbcNK1m",
	xl: "amZR9chTS",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders BorderBgFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var border_bg_default = ComponentWithRoot;
export { border_bg_default as default };
