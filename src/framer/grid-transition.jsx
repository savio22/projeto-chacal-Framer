// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 6d1ac80c6e7bce05 "Projeto Chacal", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Tablet' | 'Phone' // Variant
 * scrollSection?: undefined // Scroll Section
}} Props

 */
import { routes } from "./chunks/chunk-XLH7UDAO.js";

// virtual:grid-transition
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/eYKMJdJfxdufQ08OyauU/f7qoKJsK8HjwhlVVzJ1G/LghMnlY5A.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
	withFX,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var MotionDivWithFX = withFX(motion.div);
var cycleOrder = ["t95Qv6EBn", "lrcJKVomq", "UhRYrKs31"];
var serializationHash = "framer-PqqiG";
var variantClassNames = {
	lrcJKVomq: "framer-v-d92vp1",
	t95Qv6EBn: "framer-v-1w4r2m9",
	UhRYrKs31: "framer-v-iw36t8",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	bounce: 0.2,
	delay: 0,
	duration: 0.4,
	type: "spring",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Desktop: "t95Qv6EBn",
	Phone: "UhRYrKs31",
	Tablet: "lrcJKVomq",
};
var getProps = ({ height, id, scrollSection, width, ...props }) => {
	return {
		...props,
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "t95Qv6EBn",
		W4IeHQ65O: scrollSection ?? props.W4IeHQ65O,
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const { style, className, layoutId, variant, W4IeHQ65O, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "t95Qv6EBn",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition value={transition1}>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1w4r2m9",
							className,
							classNames,
						)}
						data-framer-name={"Desktop"}
						layoutDependency={layoutDependency}
						layoutId={"t95Qv6EBn"}
						ref={ref ?? ref1}
						style={{
							...style,
						}}
						{...addPropertyOverrides(
							{
								lrcJKVomq: {
									"data-framer-name": "Tablet",
								},
								UhRYrKs31: {
									"data-framer-name": "Phone",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<MotionDivWithFX
							__framer__styleTransformEffectEnabled={true}
							__framer__transformTargets={[
								{
									target: {
										opacity: 1,
										rotate: 0,
										rotateX: 0,
										rotateY: 0,
										scale: 1,
										skewX: 0,
										skewY: 0,
										x: 0,
										y: 0,
									},
								},
								{
									ref: W4IeHQ65O,
									target: {
										opacity: 1,
										rotate: 0,
										rotateX: 0,
										rotateY: 0,
										scale: 1,
										skewX: 0,
										skewY: 0,
										x: 0,
										y: -1200,
									},
								},
							]}
							__framer__transformTrigger={"onScrollTarget"}
							__framer__transformViewportThreshold={1}
							__perspectiveFX={false}
							__smartComponentFX={true}
							__targetOpacity={1}
							className={"framer-eibch1"}
							data-framer-name={"Container"}
							layoutDependency={layoutDependency}
							layoutId={"Ugu7QNrkH"}
						>
							<motion.div
								className={"framer-1v16560"}
								layoutDependency={layoutDependency}
								layoutId={"cwl48PoTC"}
								style={{
									backgroundColor:
										"var(--token-e7580645-294b-4fb1-bde8-c21a5a3f7676, rgb(247, 247, 242))",
								}}
							/>
							<motion.div
								className={"framer-re3pn8"}
								layoutDependency={layoutDependency}
								layoutId={"tXBu3RNxj"}
								style={{
									backgroundColor:
										"var(--token-e7580645-294b-4fb1-bde8-c21a5a3f7676, rgb(247, 247, 242))",
								}}
							/>
							<motion.div
								className={"framer-1x7rgkz"}
								layoutDependency={layoutDependency}
								layoutId={"FA7F2ov5n"}
								style={{
									backgroundColor:
										"var(--token-e7580645-294b-4fb1-bde8-c21a5a3f7676, rgb(247, 247, 242))",
								}}
							/>
							<motion.div
								className={"framer-wi8dv1"}
								layoutDependency={layoutDependency}
								layoutId={"LTKkT9woH"}
								style={{
									backgroundColor:
										"var(--token-e7580645-294b-4fb1-bde8-c21a5a3f7676, rgb(247, 247, 242))",
								}}
							/>
						</MotionDivWithFX>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-PqqiG.framer-1h4j6g3, .framer-PqqiG .framer-1h4j6g3 { display: block; }",
	".framer-PqqiG.framer-1w4r2m9 { align-content: center; align-items: center; display: flex; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: 800px; justify-content: center; overflow: hidden; padding: 0px; position: relative; width: 1200px; }",
	".framer-PqqiG .framer-eibch1 { align-content: flex-end; align-items: flex-end; bottom: -1500px; display: flex; flex: none; flex-direction: row; flex-wrap: nowrap; gap: 0px; height: 1500px; justify-content: center; left: calc(50.00000000000002% - 100% / 2); overflow: visible; padding: 0px; position: absolute; width: 100%; z-index: 1; }",
	".framer-PqqiG .framer-1v16560 { flex: 1 0 0px; height: 100%; overflow: hidden; position: relative; width: 1px; z-index: 1; }",
	".framer-PqqiG .framer-re3pn8 { flex: 1 0 0px; height: 90%; overflow: hidden; position: relative; width: 1px; z-index: 1; }",
	".framer-PqqiG .framer-1x7rgkz { flex: 1 0 0px; height: 85%; overflow: hidden; position: relative; width: 1px; z-index: 1; }",
	".framer-PqqiG .framer-wi8dv1 { flex: 1 0 0px; height: 80%; overflow: hidden; position: relative; width: 1px; z-index: 1; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-PqqiG.framer-1w4r2m9, .framer-PqqiG .framer-eibch1 { gap: 0px; } .framer-PqqiG.framer-1w4r2m9 > *, .framer-PqqiG .framer-eibch1 > * { margin: 0px; margin-left: calc(0px / 2); margin-right: calc(0px / 2); } .framer-PqqiG.framer-1w4r2m9 > :first-child, .framer-PqqiG .framer-eibch1 > :first-child { margin-left: 0px; } .framer-PqqiG.framer-1w4r2m9 > :last-child, .framer-PqqiG .framer-eibch1 > :last-child { margin-right: 0px; } }",
	".framer-PqqiG.framer-v-d92vp1.framer-1w4r2m9 { width: 810px; }",
	".framer-PqqiG.framer-v-iw36t8.framer-1w4r2m9 { width: 390px; }",
];
var FramerLghMnlY5A = withCSS(Component, css, "framer-PqqiG");
var stdin_default = FramerLghMnlY5A;
FramerLghMnlY5A.displayName = "Grid Transition";
FramerLghMnlY5A.defaultProps = {
	height: 800,
	width: 1200,
};
addPropertyControls(FramerLghMnlY5A, {
	variant: {
		options: ["t95Qv6EBn", "lrcJKVomq", "UhRYrKs31"],
		optionTitles: ["Desktop", "Tablet", "Phone"],
		title: "Variant",
		type: ControlType.Enum,
	},
	W4IeHQ65O: {
		title: "Scroll Section",
		type: ControlType.ScrollSectionRef,
	},
});
addFonts(
	FramerLghMnlY5A,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:grid-transition
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "UhRYrKs31",
	md: "lrcJKVomq",
	xl: "t95Qv6EBn",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders GridTransitionFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var grid_transition_default = ComponentWithRoot;
export { grid_transition_default as default };
