// @ts-nocheck
/* eslint-disable */
/* This file was generated by Unframer for Framer project 6d1ac80c6e7bce05 "Projeto Chacal", do not edit manually */
"use client";

/**
 * @typedef Locale
 * string
 */

/**
 * @typedef {{
 * children?: React.ReactNode
 * locale?: Locale
 * style?: React.CSSProperties
 * className?: string
 * id?: string
 * ref?: any
 * width?: any
 * height?: any
 * layoutId?: string
 * variant?: 'Desktop' | 'Tablet' | 'Phone' | 'Reveal' // Variant
 * background?: string // Background
}} Props

 */
import { routes } from "./chunks/chunk-XLH7UDAO.js";

// virtual:transition
import { Fragment as Fragment2 } from "react";
import { ContextProviders } from "unframer";

// /:https://framerusercontent.com/modules/yyBDXTKKroQwD0x8Da4Z/Z7BMMpw4b9MUv4JRMEOM/Q9BowTzNL.js
import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import {
	addFonts,
	addPropertyControls,
	ControlType,
	cx,
	useComponentViewport,
	useLocaleInfo,
	useVariantState,
	withCSS,
} from "unframer";
import { LayoutGroup, motion, MotionConfigContext } from "unframer";
import * as React from "react";
var cycleOrder = ["Y4zmtqrNQ", "MPsNopl0V", "BGjj7Xyx_", "ZTioWoHA3"];
var serializationHash = "framer-P1zxV";
var variantClassNames = {
	BGjj7Xyx_: "framer-v-13g92lx",
	MPsNopl0V: "framer-v-hpu8un",
	Y4zmtqrNQ: "framer-v-1tpibxb",
	ZTioWoHA3: "framer-v-nexvrv",
};
function addPropertyOverrides(overrides, ...variants) {
	const nextOverrides = {};
	variants?.forEach(
		(variant) => variant && Object.assign(nextOverrides, overrides[variant]),
	);
	return nextOverrides;
}
var transition1 = {
	delay: 0,
	duration: 2,
	ease: [0.8, 0.2, 0, 1],
	type: "tween",
};
var transition2 = {
	delay: 0.8,
	duration: 2,
	ease: [0.8, 0.2, 0, 1],
	type: "tween",
};
var transition3 = {
	delay: 0.8,
	duration: 1.8,
	ease: [0.8, 0.2, 0.1, 1],
	type: "tween",
};
var Transition = ({ value, children }) => {
	const config = React.useContext(MotionConfigContext);
	const transition = value ?? config.transition;
	const contextValue = React.useMemo(
		() => ({
			...config,
			transition,
		}),
		[JSON.stringify(transition)],
	);
	return (
		<MotionConfigContext.Provider value={contextValue}>
			{children}
		</MotionConfigContext.Provider>
	);
};
var Variants = motion.create(React.Fragment);
var humanReadableVariantMap = {
	Desktop: "Y4zmtqrNQ",
	Phone: "BGjj7Xyx_",
	Reveal: "ZTioWoHA3",
	Tablet: "MPsNopl0V",
};
var getProps = ({ background, height, id, width, ...props }) => {
	return {
		...props,
		DPAChux3X:
			background ??
			props.DPAChux3X ??
			"var(--token-e7580645-294b-4fb1-bde8-c21a5a3f7676, rgb(239, 238, 236))",
		variant:
			humanReadableVariantMap[props.variant] ?? props.variant ?? "Y4zmtqrNQ",
	};
};
var createLayoutDependency = (props, variants) => {
	if (props.layoutDependency)
		return variants.join("-") + props.layoutDependency;
	return variants.join("-");
};
var Component = /* @__PURE__ */ React.forwardRef(function (props, ref) {
	const { activeLocale, setLocale } = useLocaleInfo();
	const { style, className, layoutId, variant, DPAChux3X, ...restProps } =
		getProps(props);
	const {
		baseVariant,
		classNames,
		clearLoadingGesture,
		gestureHandlers,
		gestureVariant,
		isLoading,
		setGestureState,
		setVariant,
		variants,
	} = useVariantState({
		cycleOrder,
		defaultVariant: "Y4zmtqrNQ",
		variant,
		variantClassNames,
	});
	const layoutDependency = createLayoutDependency(props, variants);
	const sharedStyleClassNames = [];
	const scopingClassNames = cx(serializationHash, ...sharedStyleClassNames);
	const ref1 = React.useRef(null);
	const defaultLayoutId = React.useId();
	const componentViewport = useComponentViewport();
	return (
		<LayoutGroup id={layoutId ?? defaultLayoutId}>
			<Variants animate={variants} initial={false}>
				<Transition
					value={transition1}
					{...addPropertyOverrides(
						{
							ZTioWoHA3: {
								value: transition2,
							},
						},
						baseVariant,
						gestureVariant,
					)}
				>
					<motion.div
						{...restProps}
						{...gestureHandlers}
						className={cx(
							scopingClassNames,
							"framer-1tpibxb",
							className,
							classNames,
						)}
						data-framer-name={"Desktop"}
						draggable={"false"}
						layoutDependency={layoutDependency}
						layoutId={"Y4zmtqrNQ"}
						ref={ref ?? ref1}
						style={{
							...style,
						}}
						{...addPropertyOverrides(
							{
								BGjj7Xyx_: {
									"data-framer-name": "Phone",
								},
								MPsNopl0V: {
									"data-framer-name": "Tablet",
								},
								ZTioWoHA3: {
									"data-framer-name": "Reveal",
								},
							},
							baseVariant,
							gestureVariant,
						)}
					>
						<Transition value={transition3}>
							<motion.div
								className={"framer-2s83b"}
								data-framer-name={"BG"}
								layoutDependency={layoutDependency}
								layoutId={"UQ1demONZ"}
								style={{
									backgroundColor: DPAChux3X,
									opacity: 1,
								}}
								variants={{
									ZTioWoHA3: {
										opacity: 0,
									},
								}}
							/>
						</Transition>
						<motion.div
							className={"framer-1d8mtqy"}
							layoutDependency={layoutDependency}
							layoutId={"KbSYnds5a"}
							style={{
								rotate: 9,
								rotateX: 4,
								rotateY: 7,
								scale: 1.3,
							}}
							variants={{
								BGjj7Xyx_: {
									scale: 10.3,
								},
								MPsNopl0V: {
									scale: 10.5,
								},
								ZTioWoHA3: {
									rotate: 0,
									rotateX: 0,
									rotateY: 0,
									scale: 1,
								},
							}}
						>
							<motion.div
								className={"framer-1adszyt"}
								layoutDependency={layoutDependency}
								layoutId={"i8XUu3KaY"}
								style={{
									backgroundColor: DPAChux3X,
								}}
							/>
							<motion.div
								className={"framer-1pihw3p"}
								layoutDependency={layoutDependency}
								layoutId={"WUer4Rsok"}
								style={{
									backgroundColor: DPAChux3X,
								}}
							/>
							<motion.div
								className={"framer-1stn7z8"}
								layoutDependency={layoutDependency}
								layoutId={"ARdCHhjWO"}
								style={{
									backgroundColor: DPAChux3X,
								}}
							/>
							<motion.div
								className={"framer-10onnmp"}
								layoutDependency={layoutDependency}
								layoutId={"FmCpsRlkf"}
								style={{
									backgroundColor: DPAChux3X,
								}}
							/>
						</motion.div>
					</motion.div>
				</Transition>
			</Variants>
		</LayoutGroup>
	);
});
var css = [
	"@supports (aspect-ratio: 1) { body { --framer-aspect-ratio-supported: auto; } }",
	".framer-P1zxV.framer-uyszwp, .framer-P1zxV .framer-uyszwp { display: block; }",
	".framer-P1zxV.framer-1tpibxb { -webkit-user-select: none; align-content: center; align-items: center; display: flex; flex-direction: column; flex-wrap: nowrap; gap: 0px; height: 800px; justify-content: center; overflow: hidden; padding: 0px; position: relative; user-select: none; width: 1200px; }",
	".framer-P1zxV .framer-2s83b { flex: none; height: 100%; left: calc(50.00000000000002% - 100% / 2); overflow: visible; position: absolute; top: calc(50.00000000000002% - 100% / 2); width: 100%; z-index: 0; }",
	".framer-P1zxV .framer-1d8mtqy { flex: 1 0 0px; height: 1px; overflow: visible; position: relative; width: 100%; }",
	".framer-P1zxV .framer-1adszyt { flex: none; height: 50%; left: calc(50.00000000000002% - 100% / 2); overflow: visible; position: absolute; top: 0px; width: 100%; }",
	".framer-P1zxV .framer-1pihw3p { flex: none; height: 100%; left: 0px; overflow: visible; position: absolute; top: calc(50.00000000000002% - 100% / 2); width: 50%; }",
	".framer-P1zxV .framer-1stn7z8 { flex: none; height: 100%; overflow: visible; position: absolute; right: 0px; top: calc(50.00000000000002% - 100% / 2); width: 50%; }",
	".framer-P1zxV .framer-10onnmp { bottom: 0px; flex: none; height: 50%; left: calc(50.00000000000002% - 100% / 2); overflow: visible; position: absolute; width: 100%; }",
	"@supports (background: -webkit-named-image(i)) and (not (font-palette:dark)) { .framer-P1zxV.framer-1tpibxb { gap: 0px; } .framer-P1zxV.framer-1tpibxb > * { margin: 0px; margin-bottom: calc(0px / 2); margin-top: calc(0px / 2); } .framer-P1zxV.framer-1tpibxb > :first-child { margin-top: 0px; } .framer-P1zxV.framer-1tpibxb > :last-child { margin-bottom: 0px; } }",
	".framer-P1zxV.framer-v-hpu8un.framer-1tpibxb { height: 650px; width: 810px; }",
	".framer-P1zxV.framer-v-13g92lx.framer-1tpibxb { height: 650px; width: 390px; }",
	".framer-P1zxV.framer-v-nexvrv .framer-1adszyt, .framer-P1zxV.framer-v-nexvrv .framer-10onnmp { height: 1%; }",
	".framer-P1zxV.framer-v-nexvrv .framer-1pihw3p, .framer-P1zxV.framer-v-nexvrv .framer-1stn7z8 { width: 1%; }",
];
var FramerQ9BowTzNL = withCSS(Component, css, "framer-P1zxV");
var stdin_default = FramerQ9BowTzNL;
FramerQ9BowTzNL.displayName = "Transition";
FramerQ9BowTzNL.defaultProps = {
	height: 800,
	width: 1200,
};
addPropertyControls(FramerQ9BowTzNL, {
	variant: {
		options: ["Y4zmtqrNQ", "MPsNopl0V", "BGjj7Xyx_", "ZTioWoHA3"],
		optionTitles: ["Desktop", "Tablet", "Phone", "Reveal"],
		title: "Variant",
		type: ControlType.Enum,
	},
	DPAChux3X: {
		defaultValue:
			'var(--token-e7580645-294b-4fb1-bde8-c21a5a3f7676, rgb(239, 238, 236)) /* {"name":"BG"} */',
		title: "Background",
		type: ControlType.Color,
	},
});
addFonts(
	FramerQ9BowTzNL,
	[
		{
			explicitInter: true,
			fonts: [],
		},
	],
	{
		supportsExplicitInterCodegen: true,
	},
);

// virtual:transition
import { WithFramerBreakpoints } from "unframer";
import { jsx } from "react/jsx-runtime";
var locales = [];
var defaultResponsiveVariants = {
	base: "ZTioWoHA3",
};
/** @type {function(Props): any} */
function ComponentWithRoot({ locale, ...rest }) {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			{jsx(stdin_default, {
				...rest,
			})}
		</ContextProviders>
	);
}
/**
 * @type {import("unframer").UnframerBreakpoint}
 * Represents a responsive breakpoint for unframer.
 */

/**
 * @typedef VariantsMap
 * Partial record of UnframerBreakpoint to Props.variant, with a mandatory 'base' key.
 * { [key in UnframerBreakpoint]?: Props['variant'] } & { base: Props['variant'] }
 */

/**
 * Renders TransitionFramerComponent for all breakpoints with a variants map. Variant prop is inferred per breakpoint.
 * @function
 * @param {Omit<Props, 'variant'> & {variants?: VariantsMap}} props
 * @returns {any}
 */
ComponentWithRoot.Responsive = ({ locale = "", ...rest }) => {
	return (
		<ContextProviders
			routes={routes}
			framerSiteId={
				"6d1ac80c6e7bce05cf1e83998b9524564a80e103f40bc586c8c0153e682ec4cd"
			}
			locale={locale}
			locales={locales}
		>
			<WithFramerBreakpoints
				Component={stdin_default}
				variants={defaultResponsiveVariants}
				{...rest}
			/>
		</ContextProviders>
	);
};
Object.assign(ComponentWithRoot, stdin_default);
var transition_default = ComponentWithRoot;
export { transition_default as default };
